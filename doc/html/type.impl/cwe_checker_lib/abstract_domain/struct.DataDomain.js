(function() {var type_impls = {
"cwe_checker_lib":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#3-131\">source</a><a href=\"#impl-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#20-34\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.add_offset\" class=\"fn\">add_offset</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Add <code>offset</code> to all contained absolute and relative values of <code>self</code> and return the result.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subtract_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#37-51\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.subtract_offset\" class=\"fn\">subtract_offset</a>(&amp;self, offset: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Subtract <code>offset</code> from all contained absolute and relative values of <code>self</code> and return the result.</p>\n</div></details></div></details>",0,"cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#42-208\">source</a><a href=\"#impl-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#50-54\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.is_empty\" class=\"fn\">is_empty</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the domain does not represent any value.</p>\n<p>The meaning of an empty value depends on the usage of the domain.\nE.g. it may indicate an impossible runtime state of a program in one analysis\nor simply no value of interest in another analysis.</p>\n<p>An empty value represents the bottom value in the partial order of the domain.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_empty\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#57-64\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.new_empty\" class=\"fn\">new_empty</a>(size: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return a new empty value with the given bytesize.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_abstract_id\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#68-79\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.replace_abstract_id\" class=\"fn\">replace_abstract_id</a>(\n    &amp;mut self,\n    old_id: &amp;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.AbstractIdentifier.html\" title=\"struct cwe_checker_lib::abstract_domain::AbstractIdentifier\">AbstractIdentifier</a>,\n    new_id: &amp;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.AbstractIdentifier.html\" title=\"struct cwe_checker_lib::abstract_domain::AbstractIdentifier\">AbstractIdentifier</a>,\n    offset_adjustment: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>\n)</h4></section></summary><div class=\"docblock\"><p>For pointer values replace an abstract identifier with another one and add the offset_adjustment to the pointer offset.\nThis is needed to adjust stack pointer on call and return instructions.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_all_ids\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#84-99\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.replace_all_ids\" class=\"fn\">replace_all_ids</a>(\n    &amp;mut self,\n    replacement_map: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.AbstractIdentifier.html\" title=\"struct cwe_checker_lib::abstract_domain::AbstractIdentifier\">AbstractIdentifier</a>, Self&gt;\n)</h4></section></summary><div class=\"docblock\"><p>Replace all abstract IDs in self with the corresponding values given by the <code>replacement_map</code>.</p>\n<p>For IDs without a replacement value the <code>contains_top_values</code> flag will be set.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.referenced_ids\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#102-104\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.referenced_ids\" class=\"fn\">referenced_ids</a>(&amp;self) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.AbstractIdentifier.html\" title=\"struct cwe_checker_lib::abstract_domain::AbstractIdentifier\">AbstractIdentifier</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return an iterator over all referenced abstract IDs.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_relative_values\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#107-109\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.get_relative_values\" class=\"fn\">get_relative_values</a>(&amp;self) -&gt; &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.AbstractIdentifier.html\" title=\"struct cwe_checker_lib::abstract_domain::AbstractIdentifier\">AbstractIdentifier</a>, T&gt;</h4></section></summary><div class=\"docblock\"><p>Return the relative values contained in the domain.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_relative_values\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#112-114\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.set_relative_values\" class=\"fn\">set_relative_values</a>(\n    &amp;mut self,\n    relative_values: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.AbstractIdentifier.html\" title=\"struct cwe_checker_lib::abstract_domain::AbstractIdentifier\">AbstractIdentifier</a>, T&gt;\n)</h4></section></summary><div class=\"docblock\"><p>Replace the map of relative values with the given one.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_absolute_value\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#117-119\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.get_absolute_value\" class=\"fn\">get_absolute_value</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return the absolute value contained in the domain if present</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_absolute_value\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#123-125\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.set_absolute_value\" class=\"fn\">set_absolute_value</a>(&amp;mut self, value: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;)</h4></section></summary><div class=\"docblock\"><p>Replace the absolute value contained in the domain with the given one.\nA value of <code>None</code> means that the domain does not contain an absolute value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_top\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#132-134\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.contains_top\" class=\"fn\">contains_top</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if the domain contains <code>Top</code> values,\ni.e. values for which neither a value nor an abstract identifier is known.</p>\n<p>Note that the <code>DataDomain</code> itself has no maximal value,\ni.e. this does not indicate a <code>Top</code> value of the abstract domain.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_contains_top_flag\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#140-142\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.set_contains_top_flag\" class=\"fn\">set_contains_top_flag</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Indicate that the domain may contain <code>Top</code> values\nin addition to the contained absolute and relative values.</p>\n<p>This does not remove absolute or relative value information from the domain.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unset_contains_top_flag\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#146-148\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.unset_contains_top_flag\" class=\"fn\">unset_contains_top_flag</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Indicate that the domain does not contain any <code>Top</code> values\nin addition to the contained absolute and relative values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_target\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#152-159\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.from_target\" class=\"fn\">from_target</a>(id: <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.AbstractIdentifier.html\" title=\"struct cwe_checker_lib::abstract_domain::AbstractIdentifier\">AbstractIdentifier</a>, offset: T) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return a new value representing a variable plus an offset,\nwhere the variable is represented by the given abstract ID.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.remove_ids\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#162-174\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.remove_ids\" class=\"fn\">remove_ids</a>(&amp;mut self, ids_to_remove: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.AbstractIdentifier.html\" title=\"struct cwe_checker_lib::abstract_domain::AbstractIdentifier\">AbstractIdentifier</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>Remove all provided IDs from the list of relative values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_if_absolute_value\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#178-184\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.get_if_absolute_value\" class=\"fn\">get_if_absolute_value</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Return the contained absolute value\nonly if <code>self</code> contains no other (relative or <code>Top</code>) values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_if_unique_target\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#198-207\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.get_if_unique_target\" class=\"fn\">get_if_unique_target</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(&amp;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.AbstractIdentifier.html\" title=\"struct cwe_checker_lib::abstract_domain::AbstractIdentifier\">AbstractIdentifier</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;T</a>)&gt;</h4></section></summary><div class=\"docblock\"><p>Return the target ID and offset of the contained relative value\nif <code>self</code> contains exactly one relative value and no absolute or <code>Top</code> values.</p>\n</div></details></div></details>",0,"cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#210-244\">source</a><a href=\"#impl-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>&gt; <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_json_compact\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#213-243\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html#tymethod.to_json_compact\" class=\"fn\">to_json_compact</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://docs.rs/serde_json/1.0.114/serde_json/value/enum.Value.html\" title=\"enum serde_json::value::Value\">Value</a></h4></section></summary><div class=\"docblock\"><p>Get a more compact json-representation of the data domain.\nIntended for pretty printing, not useable for serialization/deserialization.</p>\n</div></details></div></details>",0,"cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SizedDomain-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#3-22\">source</a><a href=\"#impl-SizedDomain-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.SizedDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::SizedDomain\">SizedDomain</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bytesize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#5-7\">source</a><a href=\"#method.bytesize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SizedDomain.html#tymethod.bytesize\" class=\"fn\">bytesize</a>(&amp;self) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a></h4></section></summary><div class=\"docblock\"><p>Return the bytesize of <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_top\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#14-21\">source</a><a href=\"#method.new_top\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SizedDomain.html#tymethod.new_top\" class=\"fn\">new_top</a>(bytesize: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return a new <em>Top</em> element with the given bytesize.</p>\n<p>Note that <code>DataDomain</code> technically does not have a <code>Top</code> element with respect to the partial order.\nInstead a <code>Top</code> element here represents a non-empty value\nfor which nothing is known about the contained values.</p>\n</div></details></div></details>","SizedDomain","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#impl-Clone-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de, T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; + <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(__deserializer: __D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __D::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#impl-Debug-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cwe_checker_lib::analysis::pointer_inference::Data"],["<section id=\"impl-Eq-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#impl-Eq-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section>","Eq","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasTop-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#24-29\">source</a><a href=\"#impl-HasTop-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.HasTop.html\" title=\"trait cwe_checker_lib::abstract_domain::HasTop\">HasTop</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.top\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#26-28\">source</a><a href=\"#method.top\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.HasTop.html#tymethod.top\" class=\"fn\">top</a>(&amp;self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Generate a new <em>Top</em> element with the same bytesize as <code>self</code>.</p>\n</div></details></div></details>","HasTop","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CT%3E-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#64-73\">source</a><a href=\"#impl-From%3CT%3E-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;T&gt; for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#65-72\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: T) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<T>","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#impl-Hash-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#227-233\">source</a><a href=\"#impl-Add-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#230-232\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#impl-PartialEq-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> + <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryToBitvec-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#82-93\">source</a><a href=\"#impl-TryToBitvec-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a> + <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.TryToBitvec.html\" title=\"trait cwe_checker_lib::abstract_domain::TryToBitvec\">TryToBitvec</a>&gt; <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.TryToBitvec.html\" title=\"trait cwe_checker_lib::abstract_domain::TryToBitvec\">TryToBitvec</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_to_bitvec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#84-92\">source</a><a href=\"#method.try_to_bitvec\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.TryToBitvec.html#tymethod.try_to_bitvec\" class=\"fn\">try_to_bitvec</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>If the domain represents a single, absolute value, return it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_to_offset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/mod.rs.html#119-121\">source</a><a href=\"#method.try_to_offset\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.TryToBitvec.html#method.try_to_offset\" class=\"fn\">try_to_offset</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>If <code>self</code> represents a single absolute value, try to convert it to a signed integer and return it.\nElse return an error.\nNote that the conversion loses information about the bytesize of the value.</div></details></div></details>","TryToBitvec","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CApInt%3E-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#75-80\">source</a><a href=\"#impl-From%3CApInt%3E-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/crate/apint/0.2.0/apint/apint/struct.ApInt.html\" title=\"struct apint::apint::ApInt\">ApInt</a>&gt; for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#76-79\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bitvector: <a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<ApInt>","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryToInterval-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#95-106\">source</a><a href=\"#impl-TryToInterval-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a> + <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.TryToInterval.html\" title=\"trait cwe_checker_lib::abstract_domain::TryToInterval\">TryToInterval</a>&gt; <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.TryToInterval.html\" title=\"trait cwe_checker_lib::abstract_domain::TryToInterval\">TryToInterval</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_to_interval\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#97-105\">source</a><a href=\"#method.try_to_interval\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.TryToInterval.html#tymethod.try_to_interval\" class=\"fn\">try_to_interval</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.Interval.html\" title=\"struct cwe_checker_lib::abstract_domain::Interval\">Interval</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>If the domain represents (or can be widened to) an interval of absolute values, return the interval.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_to_offset_interval\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/mod.rs.html#135-138\">source</a><a href=\"#method.try_to_offset_interval\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.TryToInterval.html#method.try_to_offset_interval\" class=\"fn\">try_to_offset_interval</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>), <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>If <code>self</code> represents an interval of absolute values (or can be widened to represent such an interval)\nthen return it as an interval of signed integers if the interval is bounded.\nElse return an error.\nNote that the conversion loses information about the bytesize of the values contained in the interval.</div></details></div></details>","TryToInterval","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#235-241\">source</a><a href=\"#impl-Sub-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#238-240\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpecializeByConditional-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/conditional_specialization.rs.html#22-137\">source</a><a href=\"#impl-SpecializeByConditional-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html\" title=\"trait cwe_checker_lib::abstract_domain::SpecializeByConditional\">SpecializeByConditional</a> + <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html\" title=\"trait cwe_checker_lib::abstract_domain::SpecializeByConditional\">SpecializeByConditional</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/conditional_specialization.rs.html#86-128\">source</a><a href=\"#method.intersect\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.intersect\" class=\"fn\">intersect</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the intersetion of two DataDomains.</p>\n<p>Note that this implementation is unsound for several reasons:</p>\n<ul>\n<li>For example, it assumes that two different relative values cannot intersect.\nBut that is not true if their offfsets are big enough\nor if the relative values do in fact reference the same object despite having different identifiers.</li>\n<li>If intersecting relative values with absolute values we represent the result with the absolute values.\nBut depending on the use-case an approximation by the relative values could be more precise.</li>\n</ul>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_signed_less_equal_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/conditional_specialization.rs.html#23-32\">source</a><a href=\"#method.add_signed_less_equal_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.add_signed_less_equal_bound\" class=\"fn\">add_signed_less_equal_bound</a>(self, bound: &amp;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the restriction of <code>self</code> to values satisfying <code>self &lt;= bound</code>\nwith <code>self</code> and <code>bound</code> interpreted as signed integers.\nReturns an error if no value represented by <code>self</code> can satisfy the comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_unsigned_less_equal_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/conditional_specialization.rs.html#34-43\">source</a><a href=\"#method.add_unsigned_less_equal_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.add_unsigned_less_equal_bound\" class=\"fn\">add_unsigned_less_equal_bound</a>(self, bound: &amp;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the restriction of <code>self</code> to values satisfying <code>self &lt;= bound</code>\nwith <code>self</code> and <code>bound</code> interpreted as unsigned integers.\nReturns an error if no value represented by <code>self</code> can satisfy the comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_signed_greater_equal_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/conditional_specialization.rs.html#45-54\">source</a><a href=\"#method.add_signed_greater_equal_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.add_signed_greater_equal_bound\" class=\"fn\">add_signed_greater_equal_bound</a>(\n    self,\n    bound: &amp;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the restriction of <code>self</code> to values satisfying <code>self &gt;= bound</code>\nwith <code>self</code> and <code>bound</code> interpreted as signed integers.\nReturns an error if no value represented by <code>self</code> can satisfy the comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_unsigned_greater_equal_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/conditional_specialization.rs.html#56-65\">source</a><a href=\"#method.add_unsigned_greater_equal_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.add_unsigned_greater_equal_bound\" class=\"fn\">add_unsigned_greater_equal_bound</a>(\n    self,\n    bound: &amp;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the restriction of <code>self</code> to values satisfying <code>self &gt;= bound</code>\nwith <code>self</code> and <code>bound</code> interpreted as unsigned integers.\nReturns an error if no value represented by <code>self</code> can satisfy the comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_not_equal_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/conditional_specialization.rs.html#67-76\">source</a><a href=\"#method.add_not_equal_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.add_not_equal_bound\" class=\"fn\">add_not_equal_bound</a>(self, bound: &amp;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the restriction of <code>self</code> to values satisfying <code>self != bound</code>\nReturns an error if <code>self</code> only represents one value for which <code>self == bound</code> holds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.without_widening_hints\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/conditional_specialization.rs.html#130-136\">source</a><a href=\"#method.without_widening_hints\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.without_widening_hints\" class=\"fn\">without_widening_hints</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Remove all widening hints from <code>self</code>.\nNecessary for cases where several sources have widening hints,\nbut only one source should contribute widening hints to the result.</div></details></div></details>","SpecializeByConditional","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#impl-Serialize-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>,</span></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterDomain-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#133-225\">source</a><a href=\"#impl-RegisterDomain-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bin_op\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#135-179\">source</a><a href=\"#method.bin_op\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html#tymethod.bin_op\" class=\"fn\">bin_op</a>(&amp;self, op: <a class=\"enum\" href=\"cwe_checker_lib/intermediate_representation/enum.BinOpType.html\" title=\"enum cwe_checker_lib::intermediate_representation::BinOpType\">BinOpType</a>, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Compute the (abstract) result of a binary operation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.un_op\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#182-193\">source</a><a href=\"#method.un_op\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html#tymethod.un_op\" class=\"fn\">un_op</a>(&amp;self, op: <a class=\"enum\" href=\"cwe_checker_lib/intermediate_representation/enum.UnOpType.html\" title=\"enum cwe_checker_lib::intermediate_representation::UnOpType\">UnOpType</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Compute the (abstract) result of a unary operation</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subpiece\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#196-211\">source</a><a href=\"#method.subpiece\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html#tymethod.subpiece\" class=\"fn\">subpiece</a>(&amp;self, low_byte: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>, size: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>extract a sub-bitvector</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/arithmetics.rs.html#214-224\">source</a><a href=\"#method.cast\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html#tymethod.cast\" class=\"fn\">cast</a>(&amp;self, kind: <a class=\"enum\" href=\"cwe_checker_lib/intermediate_representation/enum.CastOpType.html\" title=\"enum cwe_checker_lib::intermediate_representation::CastOpType\">CastOpType</a>, width: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Cast a bitvector using the given cast type</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bin_op_bytesize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/mod.rs.html#96-107\">source</a><a href=\"#method.bin_op_bytesize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html#method.bin_op_bytesize\" class=\"fn\">bin_op_bytesize</a>(&amp;self, op: <a class=\"enum\" href=\"cwe_checker_lib/intermediate_representation/enum.BinOpType.html\" title=\"enum cwe_checker_lib::intermediate_representation::BinOpType\">BinOpType</a>, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a></h4></section></summary><div class='docblock'>Return the bytesize of the result of the given binary operation.\nHas a generic implementation that should not be overwritten!</div></details></div></details>","RegisterDomain","cwe_checker_lib::analysis::pointer_inference::Data"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbstractDomain-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#31-62\">source</a><a href=\"#impl-AbstractDomain-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.AbstractDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::AbstractDomain\">AbstractDomain</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_top\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#59-61\">source</a><a href=\"#method.is_top\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.AbstractDomain.html#tymethod.is_top\" class=\"fn\">is_top</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return whether the element represents a top element or not.</p>\n<p>Note that <code>DataDomain</code> technically does not have a <code>Top</code> element with respect to the partial order.\nInstead a <code>Top</code> element here represents a non-empty value\nfor which nothing is known about the contained values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data/trait_impl.rs.html#33-52\">source</a><a href=\"#method.merge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.AbstractDomain.html#tymethod.merge\" class=\"fn\">merge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self</h4></section></summary><div class='docblock'>Return an upper bound (with respect to the partial order on the domain) for the two inputs <code>self</code> and <code>other</code>.</div></details></div></details>","AbstractDomain","cwe_checker_lib::analysis::pointer_inference::Data"],["<section id=\"impl-StructuralPartialEq-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#impl-StructuralPartialEq-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section>","StructuralPartialEq","cwe_checker_lib::analysis::pointer_inference::Data"],["<section id=\"impl-StructuralEq-for-DataDomain%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/data.rs.html#30\">source</a><a href=\"#impl-StructuralEq-for-DataDomain%3CT%3E\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.DataDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::DataDomain\">DataDomain</a>&lt;T&gt;</h3></section>","StructuralEq","cwe_checker_lib::analysis::pointer_inference::Data"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()