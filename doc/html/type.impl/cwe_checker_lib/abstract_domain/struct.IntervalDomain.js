(function() {var type_impls = {
"cwe_checker_lib":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval/bin_ops.rs.html#3-154\">source</a><a href=\"#impl-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval/bin_ops.rs.html#6-34\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.add\" class=\"fn\">add</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Compute the interval of possible results\nif one adds a value from <code>self</code> to a value from <code>rhs</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval/bin_ops.rs.html#38-66\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.sub\" class=\"fn\">sub</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Compute the interval of possible results\nif one subtracts a value in <code>rhs</code> from a value in <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_mul\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval/bin_ops.rs.html#70-135\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.signed_mul\" class=\"fn\">signed_mul</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Compute the interval of possible results\nif one multiplies a value in <code>self</code> with a value in <code>rhs</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.shift_left\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval/bin_ops.rs.html#139-153\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.shift_left\" class=\"fn\">shift_left</a>(&amp;self, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Compute the resulting interval after a left shift operation.\nThe result is only exact if the <code>rhs</code> interval contains exactly one value.</p>\n</div></details></div></details>",0,"cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#51-376\">source</a><a href=\"#impl-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#56-63\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.new\" class=\"fn\">new</a>(start: <a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>, end: <a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new interval domain with the given bounds.</p>\n<p>Both <code>start</code> and <code>end</code> are inclusive, i.e. contained in the interval.\nThe widening hints are set to <code>None</code> and the stride is set to 1 if <code>start != end</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal_as_value_sets\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#67-69\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.equal_as_value_sets\" class=\"fn\">equal_as_value_sets</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if the two intervals represent the same value sets.\nThis function ignores differences in the widening hints of the two intervals.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_widening_lower_bound\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#74-90\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.update_widening_lower_bound\" class=\"fn\">update_widening_lower_bound</a>(&amp;mut self, bound: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>If <code>bound</code> is more exact/restrictive than the current lower bound of <code>self</code>,\nset the lower bound to <code>bound</code>.\nOtherwise keep the old lower bound.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.update_widening_upper_bound\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#95-111\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.update_widening_upper_bound\" class=\"fn\">update_widening_upper_bound</a>(&amp;mut self, bound: &amp;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>&gt;)</h4></section></summary><div class=\"docblock\"><p>If <code>bound</code> is more exact/restrictive than the current upper bound of <code>self</code>,\nset the upper bound to <code>bound</code>.\nOtherwise keep the old upper bound.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_merge\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#114-123\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.signed_merge\" class=\"fn\">signed_merge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a>) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h4></section></summary><div class=\"docblock\"><p>Merge as signed intervals without performing widenings.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.signed_merge_and_widen\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#152-202\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.signed_merge_and_widen\" class=\"fn\">signed_merge_and_widen</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a>) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h4></section></summary><div class=\"docblock\"><p>Merge as signed intervals and perform widening if necessary.</p>\n<h6 id=\"widening-strategy\"><a href=\"#widening-strategy\">Widening Strategy</a></h6><h6 id=\"the-widening-delay\"><a href=\"#the-widening-delay\">The widening delay</a></h6>\n<p>Each interval has a <code>widening_delay</code> counter,\nwhich denotes the length of the interval after the last time that widening was performed.\nFor operations with more than one input,\nthe widening delay is set to the maximum of the input widening delays.\nThe only exception to this is the <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#method.intersect\" title=\"method cwe_checker_lib::abstract_domain::IntervalDomain::intersect\"><code>IntervalDomain::intersect()</code></a> method,\nwhich may lower the value of the widening delay.</p>\n<h6 id=\"when-to-widen\"><a href=\"#when-to-widen\">When to widen</a></h6>\n<p>If the merged interval equals one of the input intervals as value sets, do not perform widening.\nElse widening is performed if and only if\nthe length of the interval is greater than the widening delay plus the stride of the interval.</p>\n<h6 id=\"how-to-widen\"><a href=\"#how-to-widen\">How to widen</a></h6>\n<p>If no suitable widening bounds for widening exist, widen to the <code>Top</code> value.\nIf exactly one widening bound exists, widen up to the bound,\nbut do not perform widening in the other direction of the interval.\nIf widening bounds for both directions exist, widen up to the bounds in both directions.</p>\n<p>After that the <code>widening_delay</code> is set to the length of the resulting interval.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero_extend\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#205-233\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.zero_extend\" class=\"fn\">zero_extend</a>(self, width: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h4></section></summary><div class=\"docblock\"><p>Zero-extend the values in the interval to the given width.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign_extend\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#236-252\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.sign_extend\" class=\"fn\">sign_extend</a>(self, width: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Sign-extend the values in the interval to the given width.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fits_into_size\" class=\"method\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#256-268\">source</a><h4 class=\"code-header\">pub fn <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#tymethod.fits_into_size\" class=\"fn\">fits_into_size</a>(&amp;self, size: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Check whether all values in the interval are representable by bitvectors of the given <code>size</code>.\nDoes not check whether this is also true for the widening hints.</p>\n</div></details></div></details>",0,"cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SpecializeByConditional-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#378-513\">source</a><a href=\"#impl-SpecializeByConditional-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html\" title=\"trait cwe_checker_lib::abstract_domain::SpecializeByConditional\">SpecializeByConditional</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.intersect\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#486-505\">source</a><a href=\"#method.intersect\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.intersect\" class=\"fn\">intersect</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Compute the intersection of two intervals.\nReturn an error if the intersection is empty.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_signed_less_equal_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#379-405\">source</a><a href=\"#method.add_signed_less_equal_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.add_signed_less_equal_bound\" class=\"fn\">add_signed_less_equal_bound</a>(self, bound: &amp;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the restriction of <code>self</code> to values satisfying <code>self &lt;= bound</code>\nwith <code>self</code> and <code>bound</code> interpreted as signed integers.\nReturns an error if no value represented by <code>self</code> can satisfy the comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_signed_greater_equal_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#407-433\">source</a><a href=\"#method.add_signed_greater_equal_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.add_signed_greater_equal_bound\" class=\"fn\">add_signed_greater_equal_bound</a>(\n    self,\n    bound: &amp;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the restriction of <code>self</code> to values satisfying <code>self &gt;= bound</code>\nwith <code>self</code> and <code>bound</code> interpreted as signed integers.\nReturns an error if no value represented by <code>self</code> can satisfy the comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_unsigned_less_equal_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#435-448\">source</a><a href=\"#method.add_unsigned_less_equal_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.add_unsigned_less_equal_bound\" class=\"fn\">add_unsigned_less_equal_bound</a>(self, bound: &amp;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the restriction of <code>self</code> to values satisfying <code>self &lt;= bound</code>\nwith <code>self</code> and <code>bound</code> interpreted as unsigned integers.\nReturns an error if no value represented by <code>self</code> can satisfy the comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_unsigned_greater_equal_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#450-461\">source</a><a href=\"#method.add_unsigned_greater_equal_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.add_unsigned_greater_equal_bound\" class=\"fn\">add_unsigned_greater_equal_bound</a>(\n    self,\n    bound: &amp;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the restriction of <code>self</code> to values satisfying <code>self &gt;= bound</code>\nwith <code>self</code> and <code>bound</code> interpreted as unsigned integers.\nReturns an error if no value represented by <code>self</code> can satisfy the comparison.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_not_equal_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#463-482\">source</a><a href=\"#method.add_not_equal_bound\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.add_not_equal_bound\" class=\"fn\">add_not_equal_bound</a>(self, bound: &amp;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Return the restriction of <code>self</code> to values satisfying <code>self != bound</code>\nReturns an error if <code>self</code> only represents one value for which <code>self == bound</code> holds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.without_widening_hints\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#507-512\">source</a><a href=\"#method.without_widening_hints\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SpecializeByConditional.html#tymethod.without_widening_hints\" class=\"fn\">without_widening_hints</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Remove all widening hints from <code>self</code>.\nNecessary for cases where several sources have widening hints,\nbut only one source should contribute widening hints to the result.</div></details></div></details>","SpecializeByConditional","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#impl-Deserialize%3C'de%3E-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#method.deserialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(__deserializer: __D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, __D::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</span></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HasTop-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#549-554\">source</a><a href=\"#impl-HasTop-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.HasTop.html\" title=\"trait cwe_checker_lib::abstract_domain::HasTop\">HasTop</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.top\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#551-553\">source</a><a href=\"#method.top\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.HasTop.html#tymethod.top\" class=\"fn\">top</a>(&amp;self) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return a new interval with the same byte size as <code>self</code> and representing the <code>Top</code> value of the domain.</p>\n</div></details></div></details>","HasTop","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CApInt%3E-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#710-720\">source</a><a href=\"#impl-From%3CApInt%3E-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://docs.rs/crate/apint/0.2.0/apint/apint/struct.ApInt.html\" title=\"struct apint::apint::ApInt\">ApInt</a>&gt; for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#712-719\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(bitvec: <a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create an interval containing only <code>bitvec</code>.</p>\n</div></details></div></details>","From<ApInt>","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryToBitvec-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#722-731\">source</a><a href=\"#impl-TryToBitvec-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.TryToBitvec.html\" title=\"trait cwe_checker_lib::abstract_domain::TryToBitvec\">TryToBitvec</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_to_bitvec\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#724-730\">source</a><a href=\"#method.try_to_bitvec\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.TryToBitvec.html#tymethod.try_to_bitvec\" class=\"fn\">try_to_bitvec</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"type\" href=\"cwe_checker_lib/intermediate_representation/type.Bitvector.html\" title=\"type cwe_checker_lib::intermediate_representation::Bitvector\">Bitvector</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>If the domain represents an interval of length one, return the contained value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_to_offset\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/mod.rs.html#119-121\">source</a><a href=\"#method.try_to_offset\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.TryToBitvec.html#method.try_to_offset\" class=\"fn\">try_to_offset</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>If <code>self</code> represents a single absolute value, try to convert it to a signed integer and return it.\nElse return an error.\nNote that the conversion loses information about the bytesize of the value.</div></details></div></details>","TryToBitvec","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#impl-Serialize-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#method.serialize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(&amp;self, __serializer: __S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;__S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, __S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<span class=\"where fmt-newline\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</span></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<section id=\"impl-StructuralPartialEq-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#impl-StructuralPartialEq-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section>","StructuralPartialEq","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#686-692\">source</a><a href=\"#impl-Add-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#689-691\">source</a><a href=\"#method.add\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<section id=\"impl-Eq-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#impl-Eq-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section>","Eq","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#744-768\">source</a><a href=\"#impl-Display-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#745-767\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AbstractDomain-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#515-526\">source</a><a href=\"#impl-AbstractDomain-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.AbstractDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::AbstractDomain\">AbstractDomain</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#518-520\">source</a><a href=\"#method.merge\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.AbstractDomain.html#tymethod.merge\" class=\"fn\">merge</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a>) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h4></section></summary><div class=\"docblock\"><p>Merge two interval domains and perform widening if necessary.\nSee <a href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html#method.signed_merge_and_widen\" title=\"method cwe_checker_lib::abstract_domain::IntervalDomain::signed_merge_and_widen\"><code>IntervalDomain::signed_merge_and_widen</code></a> for the widening strategy.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_top\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#523-525\">source</a><a href=\"#method.is_top\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.AbstractDomain.html#tymethod.is_top\" class=\"fn\">is_top</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Return <code>true</code> if the interval spans all possible values.</p>\n</div></details></div></details>","AbstractDomain","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#impl-Hash-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#method.hash\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut __H</a>)</h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/hash/mod.rs.html#242-244\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;mut H</a>)<span class=\"where fmt-newline\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</span></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.75.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#impl-PartialEq-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#method.eq\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/cmp.rs.html#239\">source</a></span><a href=\"#method.ne\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RegisterDomain-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#556-684\">source</a><a href=\"#impl-RegisterDomain-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::RegisterDomain\">RegisterDomain</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bin_op\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#561-593\">source</a><a href=\"#method.bin_op\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html#tymethod.bin_op\" class=\"fn\">bin_op</a>(&amp;self, op: <a class=\"enum\" href=\"cwe_checker_lib/intermediate_representation/enum.BinOpType.html\" title=\"enum cwe_checker_lib::intermediate_representation::BinOpType\">BinOpType</a>, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Compute the result of a binary operation between two interval domains.</p>\n<p>For binary operations that are not explicitly implemented\nthe result is only exact if both intervals contain exactly one value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.un_op\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#596-640\">source</a><a href=\"#method.un_op\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html#tymethod.un_op\" class=\"fn\">un_op</a>(&amp;self, op: <a class=\"enum\" href=\"cwe_checker_lib/intermediate_representation/enum.UnOpType.html\" title=\"enum cwe_checker_lib::intermediate_representation::UnOpType\">UnOpType</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Compute the result of an unary operation on the interval domain.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.subpiece\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#643-652\">source</a><a href=\"#method.subpiece\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html#tymethod.subpiece\" class=\"fn\">subpiece</a>(&amp;self, low_byte: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>, size: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Take a sub-bitvector of the values in the interval domain.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#655-683\">source</a><a href=\"#method.cast\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html#tymethod.cast\" class=\"fn\">cast</a>(&amp;self, kind: <a class=\"enum\" href=\"cwe_checker_lib/intermediate_representation/enum.CastOpType.html\" title=\"enum cwe_checker_lib::intermediate_representation::CastOpType\">CastOpType</a>, width: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Compute the result of a cast operation on the interval domain.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.bin_op_bytesize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/mod.rs.html#96-107\">source</a><a href=\"#method.bin_op_bytesize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.RegisterDomain.html#method.bin_op_bytesize\" class=\"fn\">bin_op_bytesize</a>(&amp;self, op: <a class=\"enum\" href=\"cwe_checker_lib/intermediate_representation/enum.BinOpType.html\" title=\"enum cwe_checker_lib::intermediate_representation::BinOpType\">BinOpType</a>, rhs: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a></h4></section></summary><div class='docblock'>Return the bytesize of the result of the given binary operation.\nHas a generic implementation that should not be overwritten!</div></details></div></details>","RegisterDomain","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#702-708\">source</a><a href=\"#impl-Neg-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#705-707\">source</a><a href=\"#method.neg\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#694-700\">source</a><a href=\"#impl-Sub-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">ยง</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#697-699\">source</a><a href=\"#method.sub\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.75.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#impl-Debug-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#method.fmt\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.75.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.75.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<section id=\"impl-StructuralEq-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#impl-StructuralEq-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/marker/trait.StructuralEq.html\" title=\"trait core::marker::StructuralEq\">StructuralEq</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section>","StructuralEq","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CInterval%3E-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#39-49\">source</a><a href=\"#impl-From%3CInterval%3E-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.Interval.html\" title=\"struct cwe_checker_lib::abstract_domain::Interval\">Interval</a>&gt; for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#41-48\">source</a><a href=\"#method.from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(interval: <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.Interval.html\" title=\"struct cwe_checker_lib::abstract_domain::Interval\">Interval</a>) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h4></section></summary><div class=\"docblock\"><p>Generate an interval domain without widening hints.</p>\n</div></details></div></details>","From<Interval>","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#impl-Clone-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#26\">source</a><a href=\"#method.clone\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> ยท <a class=\"src\" href=\"https://doc.rust-lang.org/1.75.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.75.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryToInterval-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#733-742\">source</a><a href=\"#impl-TryToInterval-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.TryToInterval.html\" title=\"trait cwe_checker_lib::abstract_domain::TryToInterval\">TryToInterval</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_to_interval\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#735-741\">source</a><a href=\"#method.try_to_interval\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.TryToInterval.html#tymethod.try_to_interval\" class=\"fn\">try_to_interval</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.Interval.html\" title=\"struct cwe_checker_lib::abstract_domain::Interval\">Interval</a>, <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class=\"docblock\"><p>If the domain represents a bounded (i.e. not <code>Top</code>) interval, return it.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_to_offset_interval\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/mod.rs.html#135-138\">source</a><a href=\"#method.try_to_offset_interval\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.TryToInterval.html#method.try_to_offset_interval\" class=\"fn\">try_to_offset_interval</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.75.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.75.0/std/primitive.i64.html\">i64</a>), <a class=\"struct\" href=\"https://docs.rs/anyhow/1.0.80/anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>If <code>self</code> represents an interval of absolute values (or can be widened to represent such an interval)\nthen return it as an interval of signed integers if the interval is bounded.\nElse return an error.\nNote that the conversion loses information about the bytesize of the values contained in the interval.</div></details></div></details>","TryToInterval","cwe_checker_lib::analysis::pointer_inference::ValueDomain"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SizedDomain-for-IntervalDomain\" class=\"impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#528-547\">source</a><a href=\"#impl-SizedDomain-for-IntervalDomain\" class=\"anchor\">ยง</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"cwe_checker_lib/abstract_domain/trait.SizedDomain.html\" title=\"trait cwe_checker_lib::abstract_domain::SizedDomain\">SizedDomain</a> for <a class=\"struct\" href=\"cwe_checker_lib/abstract_domain/struct.IntervalDomain.html\" title=\"struct cwe_checker_lib::abstract_domain::IntervalDomain\">IntervalDomain</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.bytesize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#530-532\">source</a><a href=\"#method.bytesize\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SizedDomain.html#tymethod.bytesize\" class=\"fn\">bytesize</a>(&amp;self) -&gt; <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a></h4></section></summary><div class=\"docblock\"><p>Return the size in bytes of the represented values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_top\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/cwe_checker_lib/abstract_domain/interval.rs.html#535-546\">source</a><a href=\"#method.new_top\" class=\"anchor\">ยง</a><h4 class=\"code-header\">fn <a href=\"cwe_checker_lib/abstract_domain/trait.SizedDomain.html#tymethod.new_top\" class=\"fn\">new_top</a>(bytesize: <a class=\"struct\" href=\"cwe_checker_lib/intermediate_representation/struct.ByteSize.html\" title=\"struct cwe_checker_lib::intermediate_representation::ByteSize\">ByteSize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Return a new <code>Top</code> value with the given bytesize.</p>\n</div></details></div></details>","SizedDomain","cwe_checker_lib::analysis::pointer_inference::ValueDomain"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()